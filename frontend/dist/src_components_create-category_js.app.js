"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["src_components_create-category_js"],{

/***/ "./src/components/create-category.js":
/*!*******************************************!*\
  !*** ./src/components/create-category.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateCategory: () => (/* binding */ CreateCategory)\n/* harmony export */ });\n/* harmony import */ var _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/http-utils */ \"./src/utils/http-utils.js\");\n\r\n\r\nclass CreateCategory {\r\n    constructor(openNewRoute) {\r\n        this.openNewRoute = openNewRoute;\r\n        this.pageTitle = document.getElementById(\"page-title\");\r\n        this.sendButton = document.getElementById(\"send-button\");\r\n        this.canselButton = document.getElementById(\"cansel-button\");\r\n        this.categoryInput = document.getElementById('input-name-category');\r\n\r\n        this.urlParams = new URLSearchParams(window.location.search);\r\n\r\n        if (!this.pageTitle || !this.sendButton || !this.categoryInput) {\r\n            return;\r\n        }\r\n\r\n        if (this.canselButton) {\r\n            this.canselButton.addEventListener('click', this.cancel.bind(this));\r\n        }\r\n\r\n        this.sendButton.addEventListener('click', this.handleSubmit.bind(this));\r\n\r\n        this.initPage().then();\r\n    }\r\n\r\n    async initPage(){\r\n        const category = this.urlParams.get('category');\r\n        const type = this.urlParams.get('type');\r\n        const id = this.urlParams.get('id');\r\n\r\n        console.log('Params:', { category, type, id });\r\n\r\n        this.apiUrl = category === 'income' ? '/categories/income' : '/categories/expense';\r\n\r\n        if (type === 'edit') {\r\n            this.pageTitle.innerText = 'Редактирование категории';\r\n            await this.loadCategoryData(id);\r\n        } else if (type === 'create') {\r\n            this.pageTitle.innerText = 'Создание категории';\r\n        } else {\r\n            throw new Error('Неизвестный тип операции');\r\n        }\r\n    }\r\n\r\n    async loadCategoryData(id) {\r\n        try {\r\n            const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__.HttpUtils.request(`${this.apiUrl}/${id}`, 'GET');\r\n\r\n            if (result.error) {\r\n                alert('Ошибка загрузки категории: ' + result.message);\r\n                return;\r\n            }\r\n\r\n            if (result.response) {\r\n                this.categoryInput.value = result.response.title;\r\n                this.currentCategoryId = id;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading category:', error);\r\n            alert('Ошибка при загрузке данных категории');\r\n        }\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.validateInput()) {\r\n            const type = this.urlParams.get('type');\r\n\r\n            if (type === 'create') {\r\n                await this.createCategory();\r\n            } else if (type === 'edit') {\r\n                await this.editCategory();\r\n            }\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n        if (this.categoryInput.value.trim()) {\r\n            this.categoryInput.classList.remove('is-invalid');\r\n            return true;\r\n        } else {\r\n            this.categoryInput.classList.remove('is-invalid');\r\n            this.categoryInput.classList.add('is-invalid');\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async createCategory() {\r\n        this.sendButton.disabled = true;\r\n        this.sendButton.textContent = 'Создание...';\r\n\r\n        try {\r\n            const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__.HttpUtils.request(this.apiUrl, 'POST', true, {\r\n                title: this.categoryInput.value.trim()\r\n            });\r\n\r\n            if (result.error || !result.response) {\r\n                this.showError(result.message || 'Ошибка создания категории');\r\n            } else {\r\n                this.redirectBack();\r\n            }\r\n        } catch (error) {\r\n            this.showError('Ошибка сети при создании категории');\r\n        } finally {\r\n            this.sendButton.disabled = false;\r\n            this.sendButton.textContent = 'Сохранить';\r\n        }\r\n    }\r\n\r\n    async editCategory() {\r\n        this.sendButton.disabled = true;\r\n        this.sendButton.textContent = 'Сохранение...';\r\n\r\n        try {\r\n            const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__.HttpUtils.request(`${this.apiUrl}/${this.currentCategoryId}`, 'PUT', true, {\r\n                title: this.categoryInput.value.trim()\r\n            });\r\n\r\n            if (result.error || !result.response) {\r\n                this.showError(result.message || 'Ошибка сохранения категории');\r\n            } else {\r\n                this.redirectBack();\r\n            }\r\n        } catch (error) {\r\n            this.showError('Ошибка сети при сохранении категории');\r\n        } finally {\r\n            this.sendButton.disabled = false;\r\n            this.sendButton.textContent = 'Сохранить';\r\n        }\r\n    }\r\n\r\n    showError(message) {\r\n        const errorElement = document.getElementById(\"input-name-category-error\");\r\n        if (errorElement) {\r\n            errorElement.innerText = 'Ошибка: ' + message;\r\n            errorElement.style.display = 'block';\r\n        }\r\n        this.categoryInput.classList.add('is-invalid');\r\n    }\r\n\r\n    redirectBack() {\r\n        const category = this.urlParams.get('category');\r\n        if (category === 'income') {\r\n            this.openNewRoute('/profit');\r\n        } else {\r\n            this.openNewRoute('/costs');\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        this.redirectBack();\r\n    }\r\n}\n\n//# sourceURL=webpack://frontend/./src/components/create-category.js?\n}");

/***/ }),

/***/ "./src/utils/http-utils.js":
/*!*********************************!*\
  !*** ./src/utils/http-utils.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HttpUtils: () => (/* binding */ HttpUtils)\n/* harmony export */ });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/utils/config.js\");\n/* harmony import */ var _auth_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./auth-utils */ \"./src/utils/auth-utils.js\");\n\r\n\r\n\r\nclass HttpUtils {\r\n    static async request(url, method = 'GET', useAuth = true, body = null) {\r\n        const result = {\r\n            error: false,\r\n            response: null\r\n        }\r\n\r\n        const accessToken = _auth_utils__WEBPACK_IMPORTED_MODULE_1__.AuthUtils.getAuthInfo(_auth_utils__WEBPACK_IMPORTED_MODULE_1__.AuthUtils.accessTokenKey);\r\n        const refreshToken = _auth_utils__WEBPACK_IMPORTED_MODULE_1__.AuthUtils.getAuthInfo(_auth_utils__WEBPACK_IMPORTED_MODULE_1__.AuthUtils.refreshTokenKey);\r\n\r\n        const params = {\r\n            method: method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Accept': 'application/json',\r\n            },\r\n        };\r\n\r\n        if (useAuth) {\r\n            if (accessToken) {\r\n                params.headers['x-auth-token'] = accessToken;\r\n            } else {\r\n                console.log('No access token - request may fail');\r\n            }\r\n        }\r\n\r\n        if (body) {\r\n            params.body = JSON.stringify(body);\r\n        }\r\n\r\n        let response = null;\r\n        try {\r\n            response = await fetch(_config__WEBPACK_IMPORTED_MODULE_0__.config.api + url, params);\r\n\r\n            result.response = await response.json();\r\n\r\n        } catch (e) {\r\n            result.error = true;\r\n            return result;\r\n        }\r\n\r\n        if (response.status < 200 || response.status >= 300) {\r\n            result.error = true;\r\n\r\n            if (useAuth && response.status === 401) {\r\n                if (!accessToken) {\r\n                    result.redirect = '/login';\r\n                } else {\r\n                    const updateTokenResult = await _auth_utils__WEBPACK_IMPORTED_MODULE_1__.AuthUtils.updateRefreshToken();\r\n                    if (updateTokenResult) {\r\n                        return this.request(url, method, useAuth, body);\r\n                    } else {\r\n                        result.redirect = '/login';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\n\n//# sourceURL=webpack://frontend/./src/utils/http-utils.js?\n}");

/***/ })

}]);