"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["src_components_create-transaction_js"],{

/***/ "./src/components/create-transaction.js":
/*!**********************************************!*\
  !*** ./src/components/create-transaction.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CreateTransaction: () => (/* binding */ CreateTransaction)\n/* harmony export */ });\n/* harmony import */ var _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/http-utils */ \"./src/utils/http-utils.js\");\n\r\n\r\nclass CreateTransaction {\r\n    urlCreate = '/operations';\r\n    urlIncome = '/categories/income';\r\n    urlExpense = '/categories/expense';\r\n\r\n    pageTitle = \"Создание дохода/расхода\"\r\n\r\n    constructor(openNewRoute) {\r\n        this.openNewRoute = openNewRoute;\r\n\r\n        this.pageTitleElement = document.getElementById('page-title');\r\n        this.pageTitleElement.innerText = this.pageTitle;\r\n        this.typeSelectElement = document.getElementById('type');\r\n        this.categorySelectElement = document.getElementById('type-category');\r\n        this.amountInputElement = document.getElementById('amount');\r\n        this.dateInputElement = document.getElementById('date');\r\n        this.commentInputElement = document.getElementById('comment');\r\n        this.buttonCreateElement = document.getElementById('button-create');\r\n        this.buttonCreateElement.addEventListener('click', this.setIncomeExpense.bind(this));\r\n\r\n        this.typeSelectElement.addEventListener('change', () => {\r\n            this.updateCategories();\r\n        });\r\n\r\n        this.selectIncomeElement = document.getElementById('select-inc');\r\n        this.selectExpenseElement = document.getElementById('select-exp');\r\n        this.typeOperation = sessionStorage.getItem('type');\r\n\r\n        if (this.typeOperation) {\r\n            this.typeSelectElement.value = this.typeOperation;\r\n        }\r\n\r\n        if (this.typeOperation === 'expense') {\r\n            this.selectExpenseElement.selected = true;\r\n            this.selectIncomeElement.selected = false;\r\n        } else {\r\n            this.selectIncomeElement.selected = true;\r\n            this.selectExpenseElement.selected = false;\r\n        }\r\n\r\n        this.showCategory().then();\r\n    }\r\n\r\n    async showCategory() {\r\n\r\n        this.categorySelectElement.innerHTML = '<option value=\"\" selected disabled>Категория</option>';\r\n\r\n        this.categoryList = await this.getCategory();\r\n\r\n        if (this.categoryList && this.categoryList.length > 0) {\r\n            this.categoryList.forEach(category => {\r\n                const optionElement = document.createElement('option');\r\n                optionElement.setAttribute('value', category.id);\r\n                optionElement.innerText = category.title;\r\n                this.categorySelectElement.appendChild(optionElement);\r\n            });\r\n        } else {\r\n            const noCategoryOption = document.createElement('option');\r\n            noCategoryOption.disabled = true;\r\n            noCategoryOption.innerText = 'Нет доступных категорий';\r\n            this.categorySelectElement.appendChild(noCategoryOption);\r\n        }\r\n    }\r\n\r\n    async updateCategories() {\r\n        this.typeOperation = this.typeSelectElement.value;\r\n        await this.showCategory();\r\n    }\r\n\r\n    validateForm() {\r\n        let isValid = true;\r\n\r\n        if (this.typeSelectElement.value) {\r\n            this.typeSelectElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.typeSelectElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        if (this.categorySelectElement.value && this.categorySelectElement.value !== '') {\r\n            this.categorySelectElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.categorySelectElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        if (this.amountInputElement.value && this.amountInputElement.value > 0) {\r\n            this.amountInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.amountInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        if (this.dateInputElement.value) {\r\n            this.dateInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.dateInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        if (this.commentInputElement.value.trim()) {\r\n            this.commentInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.commentInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    async setIncomeExpense() {\r\n\r\n        if (this.validateForm()) {\r\n            const requestData = {\r\n                type: this.typeSelectElement.value,\r\n                amount: parseInt(this.amountInputElement.value),\r\n                date: this.dateInputElement.value,\r\n                comment: this.commentInputElement.value,\r\n                category_id: parseInt(this.categorySelectElement.value) // ✅ ПРАВИЛЬНОЕ ПОЛЕ\r\n            };\r\n\r\n            this.buttonCreateElement.disabled = true;\r\n            this.buttonCreateElement.textContent = 'Создание...';\r\n\r\n            try {\r\n                const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__.HttpUtils.request(this.urlCreate, 'POST', true, requestData);\r\n\r\n                if (result.error || !result.response) {\r\n                    const errorMessage = result.response?.message || result.message || 'Неизвестная ошибка';\r\n                    alert('Ошибка при создании операции: ' + errorMessage);\r\n\r\n                    const inputErrorElement = document.getElementById(\"input-name-category-error\");\r\n                    if (inputErrorElement) {\r\n                        inputErrorElement.innerText = 'Ошибка: ' + errorMessage;\r\n                        inputErrorElement.style.display = 'block';\r\n                    }\r\n                } else {\r\n                    sessionStorage.removeItem('type');\r\n                    if (typeof Layout !== 'undefined' && Layout.setBalance) {\r\n                        await Layout.setBalance();\r\n                    }\r\n                    this.openNewRoute('/transactions');\r\n                }\r\n            } catch (error) {\r\n                alert('Ошибка сети при создании операции');\r\n            } finally {\r\n                this.buttonCreateElement.disabled = false;\r\n                this.buttonCreateElement.textContent = 'Создать';\r\n            }\r\n        } else {\r\n            console.log('Form validation failed');\r\n        }\r\n    }\r\n\r\n    async getCategory() {\r\n        let url = this.urlIncome;\r\n        if (this.typeOperation === 'expense') {\r\n            url = this.urlExpense;\r\n        }\r\n\r\n        const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_0__.HttpUtils.request(url);\r\n\r\n        if (result.error) {\r\n            return [];\r\n        }\r\n\r\n        return result.response;\r\n    }\r\n}\n\n//# sourceURL=webpack://frontend/./src/components/create-transaction.js?\n}");

/***/ })

}]);