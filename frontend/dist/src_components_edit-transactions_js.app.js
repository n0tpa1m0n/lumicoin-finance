"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkfrontend"] = self["webpackChunkfrontend"] || []).push([["src_components_edit-transactions_js"],{

/***/ "./src/components/edit-transactions.js":
/*!*********************************************!*\
  !*** ./src/components/edit-transactions.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("{__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EditTransactions: () => (/* binding */ EditTransactions)\n/* harmony export */ });\n/* harmony import */ var _utils_localStorage_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/localStorage-utils */ \"./src/utils/localStorage-utils.js\");\n/* harmony import */ var _utils_http_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/http-utils */ \"./src/utils/http-utils.js\");\n\r\n\r\n\r\nclass EditTransactions {\r\n    urlEdit = '/operations';\r\n    urlIncome = '/categories/income';\r\n    urlExpense = '/categories/expense';\r\n\r\n    pageTitle = \"Редактирование дохода/расхода\"\r\n    constructor(openNewRoute) {\r\n        this.openNewRoute = openNewRoute;\r\n        this.editOperation = _utils_localStorage_utils__WEBPACK_IMPORTED_MODULE_0__.LocalStorageUtils.getOperation();\r\n        console.log(this.editOperation);\r\n        this.pageTitleElement = document.getElementById('page-title');\r\n        this.pageTitleElement.innerText = this.pageTitle;\r\n        this.typeSelectElement = document.getElementById('type');\r\n        this.typeSelectElement.value = this.editOperation.type;\r\n        this.typeSelectElement.addEventListener('change', (event) => {\r\n            this.typeOperation = event.target.value;\r\n            this.getCategory().then();\r\n        });\r\n        this.categorySelectElement = document.getElementById('type-category');\r\n        this.amountInputElement = document.getElementById('amount');\r\n        this.dateInputElement = document.getElementById('date');\r\n        this.commentInputElement = document.getElementById('comment');\r\n        this.buttonCreateElement = document.getElementById('button-create');\r\n        this.buttonCreateElement.innerText = 'Сохранить';\r\n        this.selectCategoryTitle = document.getElementById('title-category');\r\n        this.selectCategoryTitle.removeAttribute('selected');\r\n        this.typeOperation = this.editOperation.type;\r\n        this.buttonCreateElement.addEventListener('click', this.editIncomeExpense.bind(this));\r\n        this.selectIncomeElement = document.getElementById('select-inc');\r\n        this.selectExpenseElement = document.getElementById('select-exp');\r\n        this.typeSelectElement.addEventListener('change', (e) => {\r\n            console.log(e.target.value);\r\n            if (this.typeOperation === 'income') {\r\n                this.selectExpenseElement.removeAttribute('selected');\r\n                this.selectIncomeElement.setAttribute('selected', 'selected');\r\n            } else {\r\n                this.selectIncomeElement.removeAttribute('selected');\r\n                this.selectExpenseElement.setAttribute('selected', 'selected');\r\n            }\r\n\r\n\r\n        })\r\n\r\n        this.getCategory().then();\r\n\r\n    }\r\n\r\n    showCategory(categories) {\r\n        this.categorySelectElement.innerHTML = '';\r\n        if (categories && this.editOperation) {\r\n            categories.forEach(category => {\r\n                const optionElement = document.createElement('option');\r\n                if (category.title === this.editOperation.category) {\r\n                    optionElement.setAttribute('selected', 'selected');\r\n                }\r\n                optionElement.setAttribute('value', category.id);\r\n                optionElement.innerText = category.title;\r\n\r\n                this.categorySelectElement.appendChild(optionElement);\r\n            })\r\n            this.amountInputElement.value = this.editOperation.amount;\r\n            this.dateInputElement.value = this.editOperation.date;\r\n            this.commentInputElement.value = this.editOperation.comment;\r\n        }\r\n    }\r\n\r\n    async editIncomeExpense() {\r\n        if (this.validateForm()) {\r\n            const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_1__.HttpUtils.request(this.urlEdit + '/' + this.editOperation.id, 'PUT', true, {\r\n                type: this.typeSelectElement.value,\r\n                amount: parseInt(this.amountInputElement.value),\r\n                date: this.dateInputElement.value,\r\n                comment: this.commentInputElement.value,\r\n                category_id: parseInt(this.categorySelectElement.value),\r\n            })\r\n            if (result) {\r\n                this.openNewRoute('/transactions');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    validateForm() {\r\n        let isValid = true;\r\n        if (this.categorySelectElement.value.trim() !== 'Категория') {\r\n            this.categorySelectElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.categorySelectElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n        if (this.amountInputElement.value.trim()) {\r\n            this.amountInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.amountInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n        if (this.dateInputElement.value.trim()) {\r\n            this.dateInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.dateInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n        if (this.commentInputElement.value.trim()) {\r\n            this.commentInputElement.classList.remove('is-invalid');\r\n        } else {\r\n            this.commentInputElement.classList.add('is-invalid');\r\n            isValid = false;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    async getCategory() {\r\n        let url = this.urlExpense;\r\n        if (this.typeOperation === 'income') {\r\n            url = this.urlIncome;\r\n        }\r\n        const result = await _utils_http_utils__WEBPACK_IMPORTED_MODULE_1__.HttpUtils.request(url);\r\n\r\n        if (result.error) {\r\n            console.log(result.message)\r\n            return [];\r\n        }\r\n\r\n        this.showCategory(result.response);\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://frontend/./src/components/edit-transactions.js?\n}");

/***/ })

}]);